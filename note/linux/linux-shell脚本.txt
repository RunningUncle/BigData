shell 是什么?
脚本

解释器类型:
bash
sh
tcsh
ksh

linux 大多数默认使用bash:免费易用


编程

  1 #!/bin/bash   告知系统用什么解释器执行

  
  
  #!/bin/bash
echo "Hello world"
#mkdir Hello

#shell 中的变量 =左右不能有空格,变量不能以数字开头,特殊符号开头,可以一下划线_开头,不能使用系统中的关键字,尽量不要使用系统中的变量名
class=hello
echo $class
#重新赋值
class="hello world"
echo $class
#输出clas变量的长度
echo ${#class}
 #unset 删除变量 不能删除只读
unset class
#双引号中可以使用变量  单引号中不能使用变量

#变量类型:用户自定义的变量----用户在脚本或者在环境变量配置文件中定义的
#         系统变量       ------系统默认的环境变量,可以使用set查看


#######==========================字符串===========================
#定义一个字符串
echo `date`  #反引号中可以使用命令
echo "====================="
echo `ls /home`
echo "===================="

string="Helle world"
#取字符串,第一个数字表示下标  第二个数字表示长度
#${string:1:4}表示取从第一个位置起长度为4的子字符串
echo ${string:1:4}

#=======================数组==============================
echo "==========================数组===================="
#定义
arr=(1 2 3 4 5 6 7 8)

#取
echo ${arr[2]}
echo ${arr[*]} 取所有的
echo ${arr[@]} 取所有的
echo ${#arr[*]} 取长度



echo "======================shell中的运算====================="

echo "1 + 1 =  "`expr 1 + 1`
echo $((1=1))

a=20
b=10
echo `expr $a + $b`
echo `expr $a - $b`
# *号需要转义
echo `expr $a \* $b` 
echo `expr $a / $b`
echo `expr $a % $b`

echo "其他形式的:="$(($a+$b))

echo "================逻辑运算==================="
#-eq  等于
#-ne 不等于
#-le 小于等于
#-ge 大于等于
#-gt 大于
#-lt 小于

#if 条件用[]括起来,左右需要空格
if [ $a -gt $b ]
then 
echo "$a 大于 $b"
else
echo "$a 小于等于 $b"
fi

#-o 表示 或(or)
# !表示 取反
# -a 表示与 (and)

# 如果需要使用 && || 需要在加一层[]

# 三元运算
echo "============三元运算符==================="
[ 1 == 1 ] && echo "true" || echo "false"
[ 1 != 2 ] && echo "true" || echo "false"



echo "================字符串运算=============="

# = 判断字符串是否相等
# != 判断字符串是否相等
# -n 判断长度是否为0,为0返回true
# str 判断字符串是否为null
# -z 判断字符串是否是null或者长度为0返回true

echo "===============文件文件相关判断=============="

# -w 是否编辑  write
# -f 是否是文件 file
# -d 是否是目录  directory
# -r 是否刻度 read
# -x 是否可执行
# -s 长度是否为0,不为0返回true  size
# -e 文件是否存在  exists


echo "=======================条件控制==============="
# 定义
#
#  if [ condition ]
#  then
#    执行操作
#  elif [ condition ]
#  then
#    执行操作
#  else
#    执行操作
#  fi
#


#注意: [] 需要严格注意空格
#     没有elseif
#     有if的地方必须有then
#     不能没有语句
#     [[]]里面不用注意空格,正常的的表达式













  